{"version":3,"sources":["logo.svg","containers/Posts.js","containers/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Posts","posts","loading","cambiar","className","map","post","index","bookingId","tutenUserClient","firstName","lastName","bookingTime","locationId","streetAddress","bookingPrice","id","Login","useState","email","setEmail","password","setPassword","setPosts","show","setShow","Form","onSubmit","event","apiBaseUrl1","app","console","log","headers1","axios","put","headers","then","response","data","sessionTokenBck","status","headers2","get","catch","error","preventDefault","Group","size","controlId","Label","Control","autoFocus","type","value","placeholder","onChange","e","target","Button","block","disabled","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83b48704.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Posts = ({ posts, loading, cambiar }) => {\r\n  if (loading) {\r\n    return <h2>Loading ...</h2>;\r\n  }\r\n\r\n  return <table className=\"table\">\r\n    <thead>\r\n      <tr>\r\n      <th>BookingId</th>\r\n      <th>Cliente</th>\r\n      <th>Fecha de Creación</th>\r\n      <th>Dirección</th>\r\n      <th>Precio</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n    {posts.map((post, index) => (\r\n      <tr key={post.id}>\r\n        <td>{post.bookingId}</td>\r\n        <td>{post.tutenUserClient.firstName + \" \" + post.tutenUserClient.lastName}</td>\r\n        <td>{post.bookingTime}</td>\r\n        <td>{post.locationId.streetAddress}</td>\r\n        <td>{post.bookingPrice}</td>\r\n      </tr>\r\n    ))}\r\n    </tbody>\r\n    </table>;\r\n};\r\n\r\nexport default Posts;\r\n","import React, { useState } from \"react\";\r\nimport Posts from './Posts';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from 'axios';\r\nimport \"./Login.css\";\r\n\r\nexport default function Login() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [posts, setPosts] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n\r\n    function validateForm() {\r\n        return email.length > 0 && password.length > 0;\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        // var apiBaseUrl = \"https://dev.tuten.cl/TutenREST/rest/user/testapis@tuten.cl\";\r\n        var apiBaseUrl1 = \"https://dev.tuten.cl/TutenREST/rest/user/\" + email;\r\n        var apiBaseUrl2 = \"https://dev.tuten.cl/TutenREST/rest/user/contacto%40tuten.cl/bookings?current=true\";\r\n        var app = \"APP_BCK\"\r\n        console.log(\"values\", email, password);\r\n        //To be done:check for empty values before hitting submit\r\n        var self = this;\r\n        var headers1 = {\r\n            \"password\": password,\r\n            \"app\": app\r\n        }\r\n\r\n        console.log(\"headers\", headers1);\r\n        \r\n        axios.put(apiBaseUrl1, {}, {\r\n            headers : headers1})\r\n            .then(function (response) {\r\n                console.log(response);\r\n                console.log(response.data.sessionTokenBck);\r\n                if (response.status == 200) {\r\n                    setShow(true)\r\n                   console.log(\"Listo!!!\");\r\n\r\n                   var headers2 = {\r\n                    \"adminemail\" : email,\r\n                    \"password\": password,\r\n                    \"app\": app,\r\n                    \"token\" : response.data.sessionTokenBck\r\n                    }\r\n\r\n                    console.log(\"headers\", headers2);\r\n\r\n                   axios.get(apiBaseUrl2, {\r\n                    headers : headers2})\r\n                    .then(function (response) {\r\n                        setPosts(response.data);\r\n                    }).catch(function (error) {\r\n                        console.log(error);\r\n                    });\r\n\r\n\r\n                }\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            });\r\n            event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group size=\"lg\" controlId=\"email\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={email}\r\n                        placeholder=\"testapis@tuten.cl\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n            {show ? <Posts posts={posts} /> : null}\r\n        </div>\r\n    );\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Login from \"./containers/Login\";\n\nfunction App() {\n  return (\n    <Login />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}